import React, { useState, useEffect } from "react";
import { supabase } from "../supabaseClient";

const Contacts = () => {
  const [name, setName] = useState("");
  const [email, setEmail] = useState("");
  const [message, setMessage] = useState("");
  const [status, setStatus] = useState("");
  const [user, setUser] = useState(null);

  useEffect(() => {
    const createTable = async () => {
      try {
        const { data, error } = await supabase.rpc("create_contacts_table");

        if (error) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã:", error);
        } else {
          console.log("–¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞:", data);
        }
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏:", error);
      }
    };

    const fetchUser = async () => {
      const { data, error } = await supabase.auth.getUser();
      if (error) {
        console.error(error);
        setStatus("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
      } else {
        setUser(data.user);
      }
    };

    createTable();
    fetchUser();
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!name || !email || !message) {
      setStatus("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.");
      return;
    }

    try {
      const { data, error } = await supabase
        .from("contacts")
        .insert([{ name, email, message }]);

      if (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É contacts:", error.message);
        setStatus("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
        return;
      }

      setStatus("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
      setName("");
      setEmail("");
      setMessage("");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞:", error.message);
      setStatus("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    }
  };

  return (
    <section id="contacts" className="contacts">
      <div className="container">
        <h2>‚úâÔ∏è –ë—ñ–∑–±–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å—ã“£—ã–∑</h2>
        <p className="contacts-description">
          –°“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑ –Ω–µ–º–µ—Å–µ “±—Å—ã–Ω—ã—Å—Ç–∞—Ä—ã“£—ã–∑ –±–∞—Ä –º–∞? –ë—ñ–∑ ”ô—Ä“õ–∞—à–∞–Ω “õ–∞—Ä—ã–º-“õ–∞—Ç—ã–Ω–∞—Å
          –∂–∞—Å–∞—É“ì–∞ “õ—É–∞–Ω—ã—à—Ç—ã–º—ã–∑! –ë—ñ–∑–≥–µ —Å—ñ–∑–≥–µ —ã“£“ì–∞–π–ª—ã –∂–æ–ª–º–µ–Ω —Ö–∞–±–∞—Ä–ª–∞—Å—ã“£—ã–∑.
        </p>
        {user ? (
          <form className="contact-form" onSubmit={handleSubmit}>
            <h3>–ë—ñ–∑–≥–µ –∂–∞–∑—ã“£—ã–∑</h3>
            <input
              type="text"
              placeholder="–ê—Ç—ã“£—ã–∑"
              value={name}
              onChange={(e) => setName(e.target.value)}
              required
            />
            <input
              type="email"
              placeholder="–°—ñ–∑–¥—ñ“£ Email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
            />
            <textarea
              placeholder="–•–∞–±–∞—Ä–ª–∞–º–∞“£—ã–∑"
              value={message}
              onChange={(e) => setMessage(e.target.value)}
              required
            ></textarea>
            <button type="submit">–ñ—ñ–±–µ—Ä—É</button>
          </form>
        ) : (
          <p>–¢—ñ—Ä–∫–µ–ª—É “Ø—à—ñ–Ω –∞–ª–¥—ã–º–µ–Ω –∂“Ø–π–µ–≥–µ –∫—ñ—Ä—ñ“£—ñ–∑.</p>
        )}

        {status && (
          <div className="status-message">
            <p>{status}</p>
          </div>
        )}
      </div>

      <div className="contact-details">
        <div className="contact-item">
          <h3>üìç –ë—ñ–∑–¥—ñ“£ –æ—Ñ–∏—Å</h3>
          <p>–ê—Å—Ç–∞–Ω–∞ “õ., –î–æ—Å—Ç—ã“õ –∫-—Å—ñ, 15, "Judo Center" –ë–û</p>
        </div>

        <div className="contact-item">
          <h3>üìû –¢–µ–ª–µ—Ñ–æ–Ω</h3>
          <p>+7 (700) 123-45-67</p>
        </div>

        <div className="contact-item">
          <h3>üìß –≠–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ –ø–æ—à—Ç–∞</h3>
          <p>info@judoworld.kz</p>
        </div>
      </div>
    </section>
  );
};

export default Contacts;
